{
	"info": {
		"_postman_id": "98b16cf1-bf68-4924-975a-3827ddd53486",
		"name": "HW2_34-group",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "11709399"
	},
	"item": [
		{
			"name": "/first",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/first",
					"host": [
						"{{url}}"
					],
					"path": [
						"first"
					]
				}
			},
			"response": [
				{
					"name": "/first",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/first",
							"host": [
								"{{url}}"
							],
							"path": [
								"first"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "html",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/html; charset=utf-8"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.0.1 Python/3.8.10"
						},
						{
							"key": "Date",
							"value": "Mon, 22 May 2023 10:32:32 GMT"
						},
						{
							"key": "Connection",
							"value": "close"
						}
					],
					"cookie": [],
					"body": "This is the first responce from server!ss"
				}
			]
		},
		{
			"name": "/user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const res_json = pm.response.json();",
							"",
							"const res_name = res_json.name;",
							"const res_age = +res_json.age;",
							"const res_salary = +res_json.salary;",
							"const res_u_salary = res_json.family.u_salary_1_5_year;",
							"",
							"const req_json = request.data;",
							"",
							"const req_name = req_json.name;",
							"const req_age = +req_json.age;",
							"const req_salary = +req_json.salary;",
							"",
							"const family_date = res_json.family;",
							"// console.log(family_date);",
							"",
							"pm.test(\"Request/Response NAME check\", function () {",
							"    pm.expect(res_name).to.eql(\"Dmitrii\");",
							"});",
							"",
							"pm.test(\"Request/Response AGE check\", function () {",
							"    pm.expect(res_age).to.eql(35);",
							"});",
							"",
							"pm.test(\"Request/Response SALARY check\", function () {",
							"    pm.expect(res_salary).to.eql(1100);",
							"});",
							"",
							"pm.test(\"Request/Response NAME check_auto\", function () {",
							"    pm.expect(res_name).to.eql(req_name);",
							"});",
							"",
							"pm.test(\"Request/Response AGE check_auto\", function () {",
							"    pm.expect(res_age).to.eql(req_age);",
							"});",
							"",
							"pm.test(\"Request/Response SALARY check_auto\", function () {",
							"    pm.expect(res_salary).to.eql(req_salary);",
							"});",
							"",
							"pm.test(\"Request/Response U_SALARY check_auto\", function () {",
							"    pm.expect(res_u_salary).to.eql(req_salary*4);",
							"});",
							"",
							"",
							"",
							"//chai",
							"pm.test(\"Response U_SALARY is a number\", function () {",
							"    pm.expect(res_u_salary).to.is.a('number');",
							"});",
							"",
							"pm.test(\"Response name is a string\", function () {",
							"    pm.expect(res_name).to.is.a('string');",
							"});",
							"",
							"const header_server = pm.response.headers.get('Server');",
							"// console.log(header_server)",
							"",
							"pm.test(\"checking header\", function () {",
							"    pm.expect(header_server).to.eql('Werkzeug/2.0.1 Python/3.8.10');",
							"});",
							"",
							"",
							"//рандомные значения переменных (библиотека встроена в постман)",
							"// {{$randomeEmail}}",
							"// {{$randomePassword}}",
							"// {{$randomeFirstName}}",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Dmitrii",
							"type": "text"
						},
						{
							"key": "age",
							"value": "35",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1100",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const res_json = pm.response.json();",
							"",
							"const req_url = pm.request.url.query.toObject();",
							"",
							"const res_name = res_json.name;",
							"const res_age = +res_json.age;",
							"const res_salary = +res_json.salary;",
							"const res_family = res_json.family;",
							"const res_dog = res_json.family.pets.dog;",
							"const res_dogName = res_json.family.pets.dog.name;",
							"const res_dogAge = res_json.family.pets.dog.age;",
							"",
							"const req_name = req_url.name;",
							"const req_age = +req_url.age;",
							"const req_salary = +req_url.salary;",
							"",
							"",
							"pm.test(\"Request/Response NAME check\", function () {",
							"    pm.expect(res_name).to.eql(req_name);",
							"});",
							"",
							"pm.test(\"Request/Response AGE check\", function () {",
							"    pm.expect(res_age).to.eql(req_age);",
							"});",
							"",
							"pm.test(\"Request/Response SALARY check\", function () {",
							"    pm.expect(res_salary).to.eql(req_salary);",
							"});",
							"",
							"console.log(res_family);",
							"",
							"pm.test(\"Check response have param NAME\", function () {",
							"    pm.expect(res_dog).to.have.property(\"name\");",
							"});",
							"",
							"pm.test(\"Check response have param AGE\", function () {",
							"    pm.expect(res_dog).to.have.property(\"age\");",
							"});",
							"",
							"pm.test(\"Check response NAME has value\", function () {",
							"    pm.expect(res_dogName).to.eql(\"Luky\");",
							"});",
							"",
							"pm.test(\"Check response AGE has value\", function () {",
							"    pm.expect(res_dogAge).to.eql(4);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_3?name=Dmitrii&age=35&salary=1100",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Dmitrii"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "salary",
							"value": "1100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const res_json = pm.response.json();",
							"const req_url = pm.request.url.query.toObject();",
							"",
							"const res_name = res_json.name;",
							"const res_age = res_json.age;",
							"const res_salary = res_json.salary;",
							"",
							"const req_name = req_url.name;",
							"const req_age = +req_url.age;",
							"const req_salary = req_url.salary;",
							"",
							"pm.test(\"Request/Response NAME check\", function () {",
							"    pm.expect(res_name).to.eql(req_name);",
							"});",
							"",
							"pm.test(\"Request/Response AGE check\", function () {",
							"    pm.expect(res_age).to.eql(req_age);",
							"});",
							"",
							"console.log(\"Request: \" + req_salary);",
							"console.log(\"Response: \" + res_salary);",
							"console.log(\"Response the first element: \" + res_salary[0]);",
							"console.log(\"Response the second element: \" + res_salary[1]);",
							"console.log(\"Response the third element: \" + res_salary[2]);",
							"",
							"pm.test(\"Request/Response SALARY elem[0] check\", function () {",
							"    pm.expect(res_salary[0]).to.eql(+req_salary);",
							"});",
							"",
							"pm.test(\"Request/Response SALARY elem[1] check\", function () {",
							"    pm.expect(+res_salary[1]).to.eql(req_salary*2);",
							"});",
							"",
							"pm.test(\"Request/Response SALARY elem[2] check\", function () {",
							"    pm.expect(+res_salary[2]).to.eql(req_salary*3);",
							"});",
							"",
							"pm.environment.set(\"name\", res_name);",
							"pm.environment.set(\"age\", res_age);",
							"pm.environment.set(\"salary\", res_salary[0]);",
							"",
							"for (let i = 0; i < res_salary.length; i++ ) {",
							"    console.log(res_salary[i])",
							"}",
							"",
							"res_salary.forEach(function(elem) {",
							"    console.log(elem);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_4?name=Dmitrii&age=35&salary=1100",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Dmitrii"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "salary",
							"value": "1100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const res_json = pm.response.json();",
							"const req = request.data;",
							"",
							"const res_salary = res_json.start_qa_salary;",
							"const res_salary_6m = res_json.qa_salary_after_6_months;",
							"const res_salary_12m = res_json.qa_salary_after_12_months;",
							"const res_salary_18m = res_json['qa_salary_after_1.5_year'];",
							"const res_salary_42m = res_json['qa_salary_after_3.5_years'];",
							"const res_u_name = res_json.person.u_name[1];",
							"const res_u_age = res_json.person.u_age;",
							"const res_u_salary_5y = res_json.person.u_salary_5_years;",
							"",
							"const res_person = res_json.person;",
							"",
							"const req_salary = +req.salary;",
							"const req_age = +req.age;",
							"",
							"// console.log(res_person)",
							"",
							"pm.test(\"Check response have param 'start_qa_salary'\", function () {",
							"    pm.expect(res_json).to.have.property(\"start_qa_salary\");",
							"});",
							"",
							"pm.test(\"Check response have param 'qa_salary_after_6'\", function () {",
							"    pm.expect(res_json).to.have.property(\"qa_salary_after_6_months\");",
							"});",
							"",
							"pm.test(\"Check response have param 'qa_salary_after_12'\", function () {",
							"    pm.expect(res_json).to.have.property(\"qa_salary_after_12_months\");",
							"});",
							"",
							"pm.test(\"Check response have param 'qa_salary_after_1.5'\", function () {",
							"    pm.expect(res_json).to.have.property(\"qa_salary_after_1.5_year\");",
							"});",
							"",
							"pm.test(\"Check response have param 'qa_salary_after_3.5'\", function () {",
							"    pm.expect(res_json).to.have.property(\"qa_salary_after_3.5_years\");",
							"});",
							"",
							"pm.test(\"Check response param 'person'\", function () {",
							"    pm.expect(res_json).to.have.property(\"person\");",
							"});",
							"",
							"pm.test(\"Check response param value 'start_qa_salary'\", function () {",
							"    pm.expect(res_salary).to.eql(req_salary);",
							"});",
							"",
							"pm.test(\"Check response param value 'qa_salary_after_6'\", function () {",
							"    pm.expect(res_salary_6m).to.eql(req_salary*2);",
							"});",
							"",
							"pm.test(\"Check response param value 'qa_salary_after_12'\", function () {",
							"    pm.expect(res_salary_12m).to.eql(req_salary*2.7);",
							"});",
							"",
							"pm.test(\"Check response param value 'qa_salary_after_1.5'\", function () {",
							"    pm.expect(res_salary_18m).to.eql(req_salary*3.3);",
							"});",
							"",
							"pm.test(\"Check response param value 'qa_salary_after_3.5'\", function () {",
							"    pm.expect(res_salary_42m).to.eql(req_salary*3.8);",
							"});",
							"",
							"pm.test(\"Check response param value 'u_name'\", function () {",
							"    pm.expect(res_u_name).to.eql(req_salary);",
							"});",
							"",
							"pm.test(\"Check response param value 'u_age'\", function () {",
							"    pm.expect(res_u_age).to.eql(req_age);",
							"});",
							"",
							"pm.test(\"Check response param value 'u_salary_5_years'\", function () {",
							"    pm.expect(res_u_salary_5y).to.eql(req_salary*4.2);",
							"});",
							"",
							"// console.log(res_person.object)",
							"",
							"// const json = Object.keys(res_person);",
							"",
							"// for (let i = 0; i < json.length; i++ ) {",
							"//     const key = json[i];",
							"//     const value = res_person[key];",
							"//     console.log(key + \": \" + value);",
							"// }",
							"",
							"for (i in res_person) {",
							"    console.log(res_person[i]);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_2",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": [
				{
					"name": "/user_info_2",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "{{name}}",
									"type": "text"
								},
								{
									"key": "age",
									"value": "{{age}}",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "{{salary}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/user_info_2",
							"host": [
								"{{url}}"
							],
							"path": [
								"user_info_2"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "319"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.0.1 Python/3.8.10"
						},
						{
							"key": "Date",
							"value": "Mon, 22 May 2023 10:02:39 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"person\": {\n        \"u_age\": 35,\n        \"u_name\": [\n            \"Dmitrii\",\n            1100,\n            35\n        ],\n        \"u_salary_5_years\": 4620\n    },\n    \"qa_salary_after_1.5_year\": 3630,\n    \"qa_salary_after_12_months\": 2970,\n    \"qa_salary_after_3.5_years\": 4180,\n    \"qa_salary_after_6_months\": 2200,\n    \"start_qa_salary\": 1100\n}"
				}
			]
		}
	]
}